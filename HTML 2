Block and Inline Elements

Block-level Elements
A block-level element always starts on a new line, and the browsers automatically add some space (a margin) before and after the element.
A block-level element always takes up the full width available (stretches out to the left and right as far as it can).
Two commonly used block elements are: <p> and <div>.
The <div> element defines a division or a section in an HTML document.

Here are the block-level elements in HTML:
<address> <article> <aside> <blockquote>  <canvas>  <dd>  <div> <dl>  <dt>  <fieldset>  <figcaption>  <figure>  <footer>  <form>  <h1>-<h6> <header>  <hr>  <li>  <main>
<nav> <noscript>  <ol>  <p> <pre> <section> <table> <tfoot> <ul>  <video>

Inline Elements
An inline element only takes up as much width as necessary.
An inline element cannot contain a block-level element.

Here are the inline elements in HTML:
<a> <abbr>  <acronym> <b> <bdo> <big> <br>  <button>  <cite>  <code>  <dfn> <em>  <i> <img> <input> <kbd> <label> <map> <object>  <output>  <q> <samp>  <script>  <select>
<small> <span>  <strong>  <sub> <sup> <textarea>  <time>  <tt>  <var>.

The <div> element is often used as a container for other HTML elements.
The <div> element has no required attributes, but style, class and id are common.
The <span> element is an inline container used to mark up a part of a text, or a part of a document.
The <span> element has no required attributes, but style, class and id are common.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Class

The class attribute is often used to point to a class name in a style sheet. 
It can also be used by a JavaScript to access and manipulate elements with the specific class name.
Multiple HTML elements can share the same class.
The class attribute can be used on any HTML element.
The class name is case sensitive.

To create a class; write a period (.) character, followed by a class name. Then, define the CSS properties within curly braces {} in style section under head.
.note {
  font-size: 120%;
  color: red;
}
<h1>My <span class="note">Important</span> Heading</h1>

To define multiple classes, separate the class names with a space, e.g. <div class="city main">. The element will be styled according to all the classes specified.
Different Elements Can Share Same Class.
JavaScript can access elements with a specific class name with the getElementsByClassName() method.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
ID

The HTML id attribute is used to specify a unique id for an HTML element.
You cannot have more than one element with the same id in an HTML document.
The id attribute is used to point to a specific style declaration in a style sheet. It is also used by JavaScript to access and manipulate the element with the specific id.

The syntax for id is: write a hash character (#), followed by an id name. Then, define the CSS properties within curly braces {} in style section.
#myHeader {
  background-color: lightblue;
  color: black;
  padding: 40px;
  text-align: center;
}
<h1 id="myHeader">My Header</h1>

The id name is case sensitive.
The id name must contain at least one character, cannot start with a number, and must not contain whitespaces (spaces, tabs, etc.).
A class name can be used by multiple HTML elements, while an id name must only be used by one HTML element within the page.

Bookmarks with ID and Links
<h2 id="C4">Chapter 4</h2>
<a href="#C4">Jump to Chapter 4</a> (For same page)
<a href="html_demo.html#C4">Jump to Chapter 4</a> (For another page)

JavaScript can access an element with a specific id with the getElementById() method.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Iframe

An HTML iframe is used to display a web page within a web page.The HTML <iframe> tag specifies an inline frame.
<iframe src="demo_iframe.htm" style="height:200px;width:300px;" title="Iframe Example"></iframe>
Iframe - Target for a Link
<iframe src="demo_iframe.htm" name="iframe_a" title="Iframe Example"></iframe>
<p><a href="https://www.w3schools.com" target="iframe_a">W3Schools.com</a></p>
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Javascript and HTML

The HTML <script> tag is used to define a client-side script (JavaScript).
The <script> element either contains script statements, or it points to an external script file through the src attribute.
Examples
document.getElementById("demo").innerHTML = "Hello JavaScript!";
document.getElementById("demo").style.fontSize = "25px";
document.getElementById("demo").style.color = "red";
document.getElementById("demo").style.backgroundColor = "yellow";
document.getElementById("image").src = "picture.gif";

The HTML <noscript> tag defines an alternate content to be displayed to users that have disabled scripts in their browser or have a browser that doesn't support scripts.
<noscript>Sorry, your browser does not support JavaScript!</noscript>
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
File Paths

Absolute File Paths - An absolute file path is the full URL to a file.
Relative File Paths - A relative file path points to a file relative to the current page.

Path	                                                               Description
<img src="picture.jpg">	                The "picture.jpg" file is located in the same folder as the current page.
<img src="images/picture.jpg">	        The "picture.jpg" file is located in the images folder in the current folder.
<img src="/images/picture.jpg">	        The "picture.jpg" file is located in the images folder at the root of the current web.
<img src="../picture.jpg">	            The "picture.jpg" file is located in the folder one level up from the current folder.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Head

The <head> element is a container for metadata (data about data) and is placed between the <html> tag and the <body> tag.
HTML metadata is data about the HTML document. Metadata is not displayed.
Metadata typically define the document title, character set, styles, scripts, and other meta information.
The <title> element defines the title of the document. The title must be text-only, and it is shown in the browser's title bar or in the page's tab.
The <link> element defines the relationship between the current document and an external resource.<link rel="stylesheet" href="mystyle.css">

The <meta> element is typically used to specify the character set, page description, keywords, author of the document, and viewport settings.
The metadata will not be displayed on the page, but are used by browsers (how to display content or reload page), by search engines (keywords), and other web services.

Define the character set used:
<meta charset="UTF-8">

Define keywords for search engines:
<meta name="keywords" content="HTML, CSS, JavaScript">

Define a description of your web page:
<meta name="description" content="Free Web tutorials">

Define the author of a page:
<meta name="author" content="John Doe">

Refresh document every 30 seconds:
<meta http-equiv="refresh" content="30">

Setting the viewport to make your website look good on all devices:
<meta name="viewport" content="width=device-width, initial-scale=1.0">
This gives the browser instructions on how to control the page's dimensions and scaling.
The width=device-width part sets the width of the page to follow the screen-width of the device (which will vary depending on the device).
The initial-scale=1.0 part sets the initial zoom level when the page is first loaded by the browser.

The <base> element specifies the base URL and/or target for all relative URLs in a page.
The <base> tag must have either an href or a target attribute present, or both.
<base href="https://www.w3schools.com/" target="_blank">
There can only be one single <base> element in a document.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Layout

<header> - Defines a header for a document or a section
<nav> - Defines a set of navigation links
<section> - Defines a section in a document
<article> - Defines an independent, self-contained content
<aside> - Defines content aside from the content (like a sidebar)
<footer> - Defines a footer for a document or a section
<details> - Defines additional details that the user can open and close on demand
<summary> - Defines a heading for the <details> element
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Layout Techniques

There are four different techniques to create multicolumn layouts.

CSS Frameworks
If you want to create your layout fast, you can use a CSS framework, like  Bootstrap.

CSS Float Layout
It is common to do entire web layouts using the CSS float property. Float is easy to learn - you just need to remember how the float and clear properties work.
Disadvantages: Floating elements are tied to the document flow, which may harm the flexibility.

CSS Flexbox Layout
Use of flexbox ensures that elements behave predictably when the page layout must accommodate different screen sizes and different display devices.

CSS Grid Layout
The CSS Grid Layout Module offers a grid-based layout system, with rows and columns, making it easier to design web pages without having to use floats and positioning.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Responsive Web Design

A responsive web design will automatically adjust for different screen sizes and viewports.

Responsive Text Size
The text size can be set with a "vw" unit, which means the "viewport width".
That way the text size will follow the size of the browser window.
Viewport is the browser window size. 1vw = 1% of viewport width. If the viewport is 50cm wide, 1vw is 0.5cm.
<h1 style="font-size:10vw">Hello World</h1>

Using the max-width Property
If the max-width property is set to 100%, the image will scale down if it has to, but never scale up to be larger than its original size.
<img src="img_girl.jpg" style="max-width:100%;height:auto;">

Media Queries
With media queries you can define completely different styles for different browser sizes.
@media screen and (max-width: 800px) {
  .left, .main, .right {
    width: 100%;  (The width is 100%, when the viewport is 800px or smaller)
  }
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Computer Code Elements

<code>	    Defines programming code
<kbd>	      Defines keyboard input 
<samp>	    Defines computer output
<var>	      Defines a variable
<pre> 	    Defines preformatted text

<code> element does not preserve extra whitespace and line-breaks.
<code> element inside a <pre> element to preserve whitespace and line-breaks.
The content inside <code>,<kbd>,<samp> is displayed in the browser's default monospace font.
The content inside <var> is typically displayed in italic.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Semantic Elements

A semantic element clearly describes its meaning to both the browser and the developer.
Examples of non-semantic elements: <div> and <span> - Tells nothing about its content.
Examples of semantic elements: <form>, <table>, and <article> - Clearly defines its content.

The <section> element defines a section in a document.
Examples of where a <section> element can be used:
Chapters
Introduction
News items
Contact information

The <article> element specifies independent, self-contained content.
Examples of where the <article> element can be used:
Forum posts
Blog posts
User comments
Product cards
Newspaper articles

The <header> element represents a container for introductory content or a set of navigational links.
A <header> element typically contains:
one or more heading elements (<h1> - <h6>)
logo or icon
authorship information
You can have several <header> elements in one HTML document. However, <header> cannot be placed within a <footer>, <address> or another <header> element.

The <footer> element defines a footer for a document or section
A <footer> element typically contains:
authorship information
copyright information
contact information
sitemap
back to top links
related documents
You can have several <footer> elements in one document.

The <nav> element defines a set of navigation links.
Notice that NOT all links of a document should be inside a <nav> element. The <nav> element is intended only for major block of navigation links.
Browsers, such as screen readers for disabled users, can use this element to determine whether to omit the initial rendering of this content.

The <figure> tag specifies self-contained content, like illustrations, diagrams, photos, code listings, etc.
The <figcaption> tag defines a caption for a <figure> element. The <figcaption> element can be placed as the first or as the last child of a <figure> element.

Tag	                                                Description
<article>	                            Defines independent, self-contained content
<aside>	                              Defines content aside from the page content
<details>	                            Defines additional details that the user can view or hide
<figcaption>	                        Defines a caption for a <figure> element
<figure>	                            Specifies self-contained content, like illustrations, diagrams, photos, code listings, etc.
<footer>	                            Defines a footer for a document or section
<header>	                            Specifies a header for a document or section
<main>	                              Specifies the main content of a document
<mark>	                              Defines marked/highlighted text
<nav>	                                Defines navigation links
<section>	                            Defines a section in a document
<summary>                           	Defines a visible heading for a <details> element
<time>	                              Defines a date/time
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Entities

Reserved characters in HTML must be replaced with character entities.
If you use the less than (<) or greater than (>) signs in your text, the browser might mix them with tags.
&entity_name; OR &#entity_number;
To display a less than sign (<) we must write: &lt; or &#60;
Entity names are case sensitive.
Advantage of using an entity name: An entity name is easy to remember.
Disadvantage of using an entity name: Browsers may not support all entity names, but the support for entity numbers is good.

A non-breaking space is a space that will not break into a new line.
If you write 10 spaces in your text, the browser will remove 9 of them. To add real spaces to your text, you can use the &nbsp; character entity.
The non-breaking hyphen (&#8209;) is used to define a hyphen character (‑) that does not break into a new line.

Result	            Description	                Entity Name	            Entity Number
                    non-breaking space	          &nbsp;	                  &#160;
<	                  less than	                    &lt;	                    &#60;
>	                  greater than	                &gt;	                    &#62;
&	                  ampersand	                    &amp;	                    &#38;
"	                  double quotation mark	        &quot;	                  &#34;
'	                  single quotation mark
                        (apostrophe)	            &apos;	                  &#39;
¢	                  cent	                        &cent;	                  &#162;
£	                  pound	                        &pound;	                  &#163;
¥	                  yen	                          &yen;	                    &#165;
€	                  euro	                        &euro;	                  &#8364;
©	                  copyright	                    &copy;	                  &#169;
®	                  registered trademark	        &reg;	                    &#174;
                    Indian rupee                                            &#8377;
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
